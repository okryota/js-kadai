//  *******************************************************
// 定数定義
//  *******************************************************
const   CONSTgoo    =   0;
const   CONSTchoki  =   1;
const   CONSTpaa    =   2;
const   CONSTwin    =   1;
const   CONSTloss   =   -1;
const   CONSTdrow   =   0;
//  *******************************************************
// グローバル変数
//  *******************************************************
var intervalid;
var pcstop  =   true;
//  *******************************************************
// グー・チョキ・パーのエレメント取得
//  *******************************************************
var elmguu    =   document.getElementById("guu");
var elmchoki  =   document.getElementById("choki");
var elmpaa    =   document.getElementById("paa");
//  *******************************************************
//  クリックイベントリスナー
//  *******************************************************
elmguu.addEventListener("click",goo,false);
elmchoki.addEventListener("click",choki,false);
elmpaa.addEventListener("click",paa,false);
//  *******************************************************
//  マウスオーバーベントリスナー
//  *******************************************************
elmguu.addEventListener("mouseover",gooover,false);
elmchoki.addEventListener("mouseover",chokiover,false);
elmpaa.addEventListener("mouseover",paaover,false);
//  *******************************************************
//  グー　マウスオーバァー
//  *******************************************************
function    gooover()
{
    msout();
    setbdr(elmguu.style);
}
//  *******************************************************
//  チョキ　マウスオーバァー
//  *******************************************************
function    chokiover()
{
    msout();
    setbdr(elmchoki.style);
}
//  *******************************************************
//  パー　マウスオーバーァー
//  *******************************************************
function    paaover()
{
    msout();
    setbdr(elmpaa.style);
}
//  *******************************************************
//  グー・チョキ・パーのBorderを消す
//  *******************************************************
function    msout()
{
    elmguu.style.borderStyle      =   "none";
    elmchoki.style.borderStyle    =   "none";
    elmpaa.style.borderStyle      =   "none";
}
//  *******************************************************
//  変数で渡されたエレメントを罫線で囲む
//  *******************************************************
function    setbdr(elmstyle)
{
    elmstyle.borderStyle    =   "solid";
    elmstyle.borderWidth    =   "2px";
    elmstyle.borderColor    =   "red";
}
//  *******************************************************
//  グーを選択
//  *******************************************************
function    goo()
{
    janstr(CONSTgoo);
}
//  *******************************************************
//  チョキを選択
//  *******************************************************
function    choki()
{
    janstr(CONSTchoki);
}
//  *******************************************************
//  パーを選択
//  *******************************************************
function    paa()
{
    janstr(CONSTpaa);
}
//  *******************************************************
//  グー・チョキ・パー共通
//  *******************************************************
function    janstr(hand)
{
    var v0;

    message("　");                  //  メッセージクリア

    if  (   pcstop  ==  true    )
    {
        intval();
        message("もう一度、手を選ぶと止まります。");
        pcstop  =   false;
        return;
    }  
    clearInterval(intervalid);
    pcstop  =   true;

    v0  =   rand();                 //  乱数取得
    dsphand(v0);                    //  乱数によりグー・チョキ・パーを表示
    v0  =   judge(v0,hand);         //  PCと人間のジャンケン判定
    dspjudge(v0);                   //  勝敗を判定して表示
}
//  *******************************************************
//  インターバル処理
//  *******************************************************
function    intval()
{
    var i   =   0;

    intervalid  =   setInterval(function ()
    {
        dsphand(i);
        
        i++;

        if  (   i   >   2   )
        {
            i   =   0;
        }
    },100);
}
//  *******************************************************
//  0～2の乱数を返す
//  *******************************************************
function    rand()
{
    var randnum;

    randnum =   Math.floor(Math.random()   *   3);
    return(randnum);
}
//  *******************************************************
//  変数に一致する手を表示
//  *******************************************************
function    dsphand(hand)
{
    var elm =   document.getElementById("pc");

    switch  (   hand    )
    {
        case    CONSTgoo    :
            elm.src =   "goo.png";
            break;
        case    CONSTchoki  :
            elm.src =   "choki.png";
            break;
        case    CONSTpaa    :
            elm.src =   "paa.png"
            break;
    }
}
//  *******************************************************
//  ジャンケンの結果を判定して返す
//  *******************************************************
function    judge(pc,you)
{
    if  (   (   pc  ==  CONSTgoo    )   &&  you ==  CONSTgoo    )
        return(CONSTdrow);
    if  (   (   pc  ==  CONSTgoo    )   &&  you ==  CONSTchoki  )
        return(CONSTloss);
    if  (   (   pc  ==  CONSTgoo    )   &&  you ==  CONSTpaa    )
        return(CONSTwin);

    if  (   (   pc  ==  CONSTchoki  )   &&  you ==  CONSTgoo    )
        return(CONSTwin);
    if  (   (   pc  ==  CONSTchoki  )   &&  you ==  CONSTchoki  )
        return(CONSTdrow);
    if  (   (   pc  ==  CONSTchoki  )   &&  you ==  CONSTpaa    )
        return(CONSTloss);

    if  (   (   pc  ==  CONSTpaa    )   &&  you ==  CONSTgoo    )
        return(CONSTloss);
    if  (   (   pc  ==  CONSTpaa    )   &&  you ==  CONSTchoki  )
        return(CONSTwin);
    if  (   (   pc  ==  CONSTpaa    )   &&  you ==  CONSTpaa    )
        return(CONSTdrow);
}
//  *******************************************************
//  引数で判定し結果を表示
//  *******************************************************
function    dspjudge(jge)
{
    if  (   jge ==  CONSTdrow   )
    {
        message("あいこです。　もう一度、手を選ぶと始まります。");
        return;
    }
    if  (   jge ==  CONSTwin    )
    {
        message("あなたの勝ちです。　もう一度、手を選ぶと始まります。");
        return;
    }
    if  (   jge ==   CONSTloss  )
    {
        message("あなたの負けです。　もう一度、手を選ぶと始まります。");
        return;
    }
}
//  *******************************************************
//  メッセージを表示
//  *******************************************************
function    message(text)
{
    var elm;

    elm =   document.getElementById("msg");
    elm.innerHTML   =   text;
}